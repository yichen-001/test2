buildscript {
    repositories {
        for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
            maven { url(mavenRepositoryUrl) }
        }
    }
}
plugins {
    id 'java'
}

group = project.rootProject.ext.constructGroupName("", project.getName())
version = project.rootProject.constructVersion()
sourceCompatibility = project.rootProject.ext.javaVersion
targetCompatibility = project.rootProject.ext.javaVersion

repositories {
    for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
        maven { url(mavenRepositoryUrl) }
    }
}

def scalaBinaryVersion = project.rootProject.ext.scalaBinaryVersion
dependencies {
    implementation(project.rootProject.ext.jarDependency("org.apache.flink", "flink-core"))
    implementation(project.rootProject.ext.jarDependency("org.apache.flink", "flink-java"))
    implementation(project.rootProject.ext.jarDependency("org.apache.flink", "flink-scala_${scalaBinaryVersion}"))
    implementation(project.rootProject.ext.jarDependency("org.apache.flink", "flink-clients_${scalaBinaryVersion}"))
    implementation(project.rootProject.ext.jarDependency("org.apache.flink", "flink-connector-kafka_2.11"))
    implementation(project.rootProject.ext.jarDependency("org.apache.httpcomponents", "httpclient"))
    testImplementation(project.rootProject.ext.jarDependency("junit", "junit"))
}
test {
    useJUnit()
}

def mainClass = "flink.learning.example.meteorological_data.MeteorologicalDataStream"
def jarBaseName = project.rootProject.ext.visualizationMeteorologicalDataJarBaseName
def jarPath = project.rootProject.ext.visualizationMeteorologicalDataJarPath
jar {
    manifest {
        attributes "Main-Class": mainClass
    }
    setArchivesBaseName(jarBaseName)
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

def flinkClientJarName = "flink-clients_2.11-1.11.2.jar"
def dependencyJarPath = "${project.buildDir}/dependencies"
task copyDependencies(type: Copy) {
    from configurations.default
    include "**/${flinkClientJarName}"
    into dependencyJarPath
}
task runMeteorologicalData(type: Exec) {
    executable("java")
    args(
            "-classpath", "${dependencyJarPath}/${flinkClientJarName};${jarPath}",
            mainClass,
    )
    doFirst {
        println("running command: ${String.join(" ", getCommandLine())}")
    }
    dependsOn(jar)
    dependsOn(copyDependencies)
}
